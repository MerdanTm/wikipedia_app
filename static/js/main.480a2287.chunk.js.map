{"version":3,"sources":["components/Form.js","store/actions/fetchWiki.js","components/App.js","store/reducers/wikiReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["Form","props","handleChange","event","setState","search","target","value","handleKeyPress","key","submitMessage","onFormSubmit","preventDefault","handleSubmit","state","initialState","this","onSubmit","htmlFor","type","name","id","onChange","onKeyPress","Component","SEND","CLEAR","App","searchValue","getWikies","reducers","console","log","className","map","entry","index","href","rel","MapDispatchToProps","dispatch","word","fetch","then","result","json","data","payload","catch","err","connect","ownProps","rootReducer","combineReducers","action","middleware","thunk","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"iNAoDeA,E,kDAjDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,aAAe,SAAAC,GACX,EAAKC,SAAS,CACVC,OAASF,EAAMG,OAAOC,SAXX,EAcnBC,eAAe,SAACL,GACM,UAAdA,EAAMM,KACR,EAAKC,iBAhBQ,EAoBnBC,aAAe,SAACR,GACZA,EAAMS,iBACN,EAAKX,MAAMY,aAAa,EAAKC,MAAMT,QACnC,EAAKD,SAAS,EAAKW,eApBnB,EAAKD,MAAQ,CACTT,OAAQ,IAEZ,EAAKU,aAAe,EAAKD,MANV,E,0CA0BnB,WACI,IAAQT,EAAWW,KAAKF,MAAhBT,OAER,OACI,8BACA,uBAAMY,SAAUD,KAAKL,aAArB,UACI,uBAAOO,QAAQ,SAAf,oBACA,uBACIC,KAAK,OACLC,KAAK,SACLC,GAAG,SACHd,MAAOF,EACPiB,SAAUN,KAAKd,aACfqB,WAAYP,KAAKR,iBACrB,wBAAQW,KAAK,SAAb,6B,GAzCGK,a,OCDNC,EAAO,OACPC,EAAQ,QCGfC,E,4MACJd,aAAe,SAACe,GACd,EAAK3B,MAAM4B,UAAUD,I,4CAGvB,WACE,IAAQE,EAAad,KAAKf,MAAlB6B,SAGR,OADAC,QAAQC,IAAIhB,KAAKf,OAEf,sBAAKgC,UAAU,YAAf,UACE,kDACA,cAAC,EAAD,CAAMpB,aAAcG,KAAKH,eACzB,6BACGiB,EAAS,GAAGI,KAAI,SAACC,EAAOC,GAEvB,OADAL,QAAQC,IAAIG,GAEV,6BACE,mBAAGE,KAAMF,EAAO7B,OAAO,SAASgC,IAAI,aAApC,SACGH,KAFIC,e,GAjBLZ,aAiCZe,EAAqB,CAAEV,UDPJ,SAACD,GAAD,OAAiB,SAACY,GAnBxB,IAACC,EAoBlBD,GApBkBC,EAoBEb,EApBO,SAACY,GAC5BT,QAAQC,IAAI,mBACZU,MAAM,+DAAD,OAC4DD,EAD5D,mCAGFE,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACG,GAAD,OACJN,EAAS,CACPrB,KAAMM,EACNsB,QAASD,OAGZE,OAAM,SAACC,GAAD,OACLT,EAAS,CACPrB,KAAMO,aCcCwB,eALS,SAACpC,EAAOqC,GAC9B,OAAOrC,IAI+ByB,EAAzBW,CAA6CvB,G,eCtC/CZ,EAAe,CAAC,GAAI,GAAI,GAAI,ICK1BqC,EAJKC,YAAgB,CAClCvB,SDAsB,WAAmC,IAAlChB,EAAiC,uDAAzBC,EAAcuC,EAAW,uCACxD,OAAQA,EAAOnC,MACb,KAAKM,EACH,OAAO6B,EAAOP,QAChB,KAAKrB,EACH,OAAOX,EACT,QACE,OAAOD,MENPyC,EAAa,CAACC,KAWLC,EATDC,YACZN,EACArC,EACA4C,YACEC,IAAe,WAAf,EAAmBL,GACnBM,OAAOC,8BAAgCD,OAAOC,iCCLlDC,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFQ,SAASC,eAAe,W","file":"static/js/main.480a2287.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            search: ''\n        };\n        this.initialState = this.state;\n    }\n\n    handleChange = event => {\n        this.setState({\n            search : event.target.value\n        });\n    }\n    handleKeyPress=(event)=> {\n        if (event.key === \"Enter\") {\n          this.submitMessage();\n        }\n      }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        this.props.handleSubmit(this.state.search);\n        this.setState(this.initialState);\n    }\n\n    render() {\n        const { search } = this.state; \n        //console.log(search)\n        return (\n            <div>\n            <form onSubmit={this.onFormSubmit}>\n                <label htmlFor=\"search\">Search</label>\n                <input \n                    type=\"text\" \n                    name=\"search\" \n                    id=\"search\"\n                    value={search} \n                    onChange={this.handleChange}\n                    onKeyPress={this.handleKeyPress}/>\n                <button type=\"submit\">\n                    Submit\n                </button>\n            </form>\n        </div>\n        );\n    }\n}\n\nexport default Form;\n","export const SEARCH_WORD = \"SEARCH_WORD\";\r\nexport const SEND = \"SEND\";\r\nexport const CLEAR = \"CLEAR\";\r\n\r\n// const sendResults = (data) => {\r\n//   return { type: SEND, payload: data };\r\n// };\r\n\r\n// const clearResults = () => {\r\n//   return { type: CLEAR };\r\n// };\r\n\r\nconst handleData = (word) => (dispatch) => {\r\n  console.log(\"fetcing is done\");\r\n  fetch(\r\n    `https://en.wikipedia.org/w/api.php?action=opensearch&search=${word}&format=json&origin=*&limit=10`\r\n  )\r\n    .then((result) => result.json())\r\n    .then((data) =>\r\n      dispatch({\r\n        type: SEND,\r\n        payload: data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: CLEAR,\r\n      })\r\n    );\r\n};\r\n\r\nexport const getWikies = (searchValue) => (dispatch) => {\r\n  dispatch(handleData(searchValue));\r\n};\r\n\r\n// `https://en.wikipedia.org/w/api.php?action=opensearch&search=SEARCH-WORD&format=json&origin=*&limit=10`;\r\n","import React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport { connect } from \"react-redux\";\nimport { getWikies } from \"../store/actions/fetchWiki\";\n\nclass App extends Component {\n  handleSubmit = (searchValue) => {\n    this.props.getWikies(searchValue);\n  };\n\n  render() {\n    const { reducers } = this.props;\n    //console.log(this.props.store);\n    console.log(this.props);\n    return (\n      <div className=\"container\">\n        <h1>Wikipedia Search</h1>\n        <Form handleSubmit={this.handleSubmit} />\n        <ul>\n          {reducers[3].map((entry, index) => {\n            console.log(entry);\n            return (\n              <li key={index}>\n                <a href={entry} target=\"_blank\" rel=\"noreferrer\">\n                  {entry}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst MapStateToProps = (state, ownProps) => {\n  return state;\n};\nconst MapDispatchToProps = { getWikies };\n\nexport default connect(MapStateToProps, MapDispatchToProps)(App);\n","import { CLEAR, SEND } from \"../actions/fetchWiki\";\r\n\r\nexport const initialState = [\"\", [], [], []];\r\n\r\nexport const reducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND:\r\n      return action.payload;\r\n    case CLEAR:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\nimport { reducers } from \"./wikiReducer\";\n\nconst rootReducer = combineReducers({\n  reducers,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { initialState } from \"./reducers/wikiReducer\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}